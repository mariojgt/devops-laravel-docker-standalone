FROM php:8.2-fpm

# Install Node.js and npm
RUN curl -sL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# Install bun globally
RUN npm install -g bun

RUN apt-get update

# 1. development packages
RUN apt-get install -y \
    nano \
    git \
    zip \
    curl \
    sudo \
    unzip \
    libicu-dev \
    libbz2-dev \
    libpng-dev \
    libjpeg-dev \
    libmcrypt-dev \
    libreadline-dev \
    libfreetype6-dev \
    g++ \
    libonig-dev \
    libzip-dev

# 2. start with base php config, then add extensions
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

# 3. PHP extensions
RUN docker-php-ext-install \
    bz2 \
    intl \
    iconv \
    bcmath \
    opcache \
    calendar \
    mbstring \
    pdo_mysql \
    zip

# Enable additional extensions
RUN docker-php-ext-enable \
    bz2 \
    intl \
    iconv \
    bcmath \
    opcache \
    calendar \
    mbstring \
    pdo_mysql \
    zip

# 4 Install Redis extension
RUN pecl install redis \
    && docker-php-ext-enable redis

# 5. composer install
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# 6. start script
RUN mkdir -p /scripts
COPY ./start.sh /scripts
WORKDIR /scripts
RUN chmod +x start.sh
RUN ./start.sh

# 7. we need a user with the same UID/GID with host user
# so when we execute CLI commands, all the host file's ownership remains intact
# otherwise command from inside container will create root-owned files and directories
# ARG uid
# RUN useradd -G www-data,root -u $uid -d /home/devuser devuser
# RUN mkdir -p /home/devuser/.composer && \
#     chown -R devuser:devuser /home/devuser

EXPOSE 80

CMD ["php-fpm"]
